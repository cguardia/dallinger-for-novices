Introducing the Players
=======================

From the outside Dallinger might appear to be a single program, but under the surface it is actually composed of multiple different parts that work together to achieve the desired results. You can think of it as a ballet; once the show starts all the different parts perform choreographed series of movements, sometimes on their own, sometimes in concert with each other. Your role in this metaphor is that of choreographer: before the show is performed you write out exactly what moves you want each player to perform at what time. But who are the players? The diagram below gives a rough outline of the key components of Dallinger. First, everything is subdivided into the "back-end" and the "front-end". The back-end is further subdivided into (1) the database, containing nodes, vectors networks and so on, (2) the experiment, and (3) the server routes. The distinction between the front and back ends corresponds to which machine is running the actual code. The database, the experiment and the server routes are all on the server (the "back-end") which, at run-time, will either be your computer (for debug mode) or otherwise a computer on the "cloud" that you rent from Heroku (don't worry - the renting is all automated by Dallinger). The front-end, however, is executed on participants' computers and so it includes code associated with what participants see on their screen and how those elements function. Using the ballet metaphor the front-end is the stage, visible to the audience, while the back-end is everything that goes on off-stage; the changing rooms, discussions between dancers, instructions from the choreographer and so on. Using a more direct example, think about using google's search engine. When you go to their website you see their homepage and there's a box for you to enter your search terms, this is all the front end. However, google's search algorithm is not accessible to you at all, that's on a server somewhere (the back-end) and while you can send it requests, those requests are not being executed by your machine.

.. figure:: _static/players.jpg
   :alt:

The purpose of Part 2 of this book is to give you a detailed introduction to each of the components, the "players", of Dallinger. Running experiments involves each component interacting with all the others and at times you might feel unable to see how any of this could possibly lead to the execution of a full fledged experiment. But keep the faith! At the end of this part we will go through a series of demos showing, step-by-step, how these different parts combine when an experiment is executed. You might be tempted to skip ahead to that point now, but that's probably a bad idea as unless you already understand what the different parts are you will almost certainly fail to understand their interactions.
